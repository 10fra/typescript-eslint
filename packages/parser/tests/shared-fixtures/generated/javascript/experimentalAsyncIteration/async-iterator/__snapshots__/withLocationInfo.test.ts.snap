// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/Users/bradzacher/github/typescript-eslint/packages/shared-fixtures/fixtures/javascript/experimentalAsyncIteration/async-iterator.src.js parses with location information 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          70,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              69,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  27,
                  67,
                ],
                "type": "ForOfStatement",
              },
              "childScopes": Array [
                Object {
                  "$id": 5,
                  "block": Object {
                    "range": Array [
                      59,
                      67,
                    ],
                    "type": "BlockStatement",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "block",
                  "upperScope": Object {
                    "$ref": 6,
                  },
                  "variableMap": Object {},
                  "variableScope": Object {
                    "$ref": 7,
                  },
                  "variables": Array [],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "item",
                    "range": Array [
                      44,
                      48,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 2,
                  },
                  "writeExpr": Object {
                    "name": "items",
                    "range": Array [
                      52,
                      57,
                    ],
                    "type": "Identifier",
                  },
                },
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "items",
                    "range": Array [
                      52,
                      57,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "for",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "item": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "item",
                        "range": Array [
                          44,
                          48,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          44,
                          48,
                        ],
                        "type": "VariableDeclarator",
                      },
                      "parent": Object {
                        "range": Array [
                          38,
                          48,
                        ],
                        "type": "VariableDeclaration",
                      },
                      "type": "Variable",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "item",
                      "range": Array [
                        44,
                        48,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "item",
                  "references": Array [
                    Object {
                      "$ref": 3,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  69,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;
