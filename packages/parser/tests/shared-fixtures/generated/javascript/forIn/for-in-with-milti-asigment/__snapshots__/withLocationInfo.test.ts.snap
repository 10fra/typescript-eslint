// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`../shared-fixtures/fixtures/javascript/forIn/for-in-with-milti-asigment.src.js parses with location information 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              18,
            ],
            "type": "AssignmentExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "z",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "q",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "q",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;
