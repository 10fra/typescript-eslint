// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/Users/bradzacher/github/typescript-eslint/packages/shared-fixtures/fixtures/javascript/experimentalOptionalCatchBinding/optional-catch-binding.src.js parses with location information 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              4,
              6,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [],
        },
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              15,
            ],
            "type": "CatchClause",
          },
          "childScopes": Array [
            Object {
              "$id": 1,
              "block": Object {
                "range": Array [
                  13,
                  15,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 2,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "catch",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;
