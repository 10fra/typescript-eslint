// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`../shared-fixtures/fixtures/javascript/basics/update-expression.src.js parses with location information 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              11,
              34,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  28,
                  29,
                ],
                "type": "Identifier",
              },
              "kind": "rw",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": null,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              9,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "f",
            "range": Array [
              35,
              36,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 1,
        },
        "i": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "i",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  9,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "i",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "i",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  20,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  34,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                20,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;
